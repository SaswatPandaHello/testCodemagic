# Check out https://docs.codemagic.io/yaml/building-a-react-native-app/ for more information
# Please review and update values

workflows:
    react-native-android:
        name: React Native Android
        max_build_duration: 120
        instance_type: mac_mini
        environment:
            vars:
                GCLOUD_SERVICE_ACCOUNT_CREDENTIALS: Encrypted(...) # <-- Put encrypted CONTENTS of your Gloud crendentials file here
                PACKAGE_NAME: "YOUR_PACKAGE_NAME" # <-- Put your package name here e.g. com.domain.myapp
                CM_KEYSTORE: Encrypted(...) # <-- Put your encrypted keystore file here
                CM_KEYSTORE_PASSWORD: Encrypted(...) # <-- Put your encrypted keystore password here
                CM_KEY_ALIAS_PASSWORD: Encrypted(...) # <-- Put your encrypted keystore alias password here
                CM_KEY_ALIAS_USERNAME: Encrypted(...) # <-- Put your encrypted keystore alias username here 
            node: latest
        triggering:
            events:
                - push
                - tag
                - pull_request
            branch_patterns:
                - pattern: develop
                  include: true
                  source: true
        scripts:
            - name: Install npm dependencies
              script: |
                npm install
            - name: Set Android SDK location
              script: |
                echo "sdk.dir=$ANDROID_SDK_ROOT" > "$FCI_BUILD_DIR/android/local.properties"
            - name: Set up keystore
              script: |
                    echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
                    cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
                    storePassword=$CM_KEYSTORE_PASSWORD
                    keyPassword=$CM_KEY_ALIAS_PASSWORD
                    keyAlias=$CM_KEY_ALIAS_USERNAME
                    storeFile=/tmp/keystore.keystore
                    EOF               
            - name: Build Android release
              script: |
                # Set environment variable so it can be used to increment build number in android/app/build.gradle
                # Note that tracks can be specified when retrieving latest build number from Google Play, for example:
                # export NEW_BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME" --tracks=alpha) + 1))
                export NEW_BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME") + 1))
                cd android && ./gradlew assembleRelease
        artifacts:
            - android/app/build/outputs/**/*.apk
        publishing:
            # See the following link for details about email publishing - https://docs.codemagic.io/publishing-yaml/distribution/#email
            email:
                recipients:
                    - user_1@example.com
                    - user_2@example.com
                notify:
                  success: true     # To not receive a notification when a build succeeds
                  failure: false    # To not receive a notification when a build fails
            slack: 
              # See the following link about how to connect your Slack account - https://docs.codemagic.io/publishing-yaml/distribution/#slack
              channel: '#channel-name'
              notify_on_build_start: true   # To receive a notification when a build starts
              notify:
                success: true               # To not receive a notification when a build succeeds
                failure: false              # To not receive a notification when a build fails
            google_play:
              # See the following link for information regarding publishing to Google Play - https://docs.codemagic.io/publishing-yaml/distribution/#google-play
              credentials: Encrypted(...) # <-- Put your encrypted google-services.json here
              track: alpha
    react-native-ios:
        name: React Native iOS
        max_build_duration: 120
        instance_type: mac_mini
        environment:
            vars:
                # Env vars for automatic iOS code signing
                # See the following link for more details - https://docs.codemagic.io/code-signing-yaml/signing-ios/
                XCODE_WORKSPACE: "TESTING.xcworkspace" # <-- Put the name of your Xcode workspace here
                CM_CERTIFICATE: Encrypted(Z0FBQUFBQmhLSkRtQkdVNEc1ZnU5cnVlUG1Qc0RyTXZUeWxTWnluMjYxenVOOE5mWWpVcHBpNHJRS1hLWjl1YWl5XzZLcHl3bFpHQ2hrU3BSdUNaZlRLVHVweFJoUXEzTy1SSDhTemI3cEl3UlpvWmw1al9FZzNraDlKVC1LZHoteXAzS0JiMkpkSURrQVpaRDBBUmNSUVhNaEhqcmhDUlpvVC1mUVhJY1VUcWhWUTRCWjA1UlNSeVFpM0hHWkJOWEhTaXdQdXBQMDJLNThnSE10QmtMWWVqUlNKS0o4SllHMkdTUHg1NnE1U2g4MHNtdEw3SjRkdXhGWTU1N1RHbU9KbFpqQUlQSjd2VWt2NjJPdWlDN0wzNHNTQ091QVBEaUpGbVF1MWxKR1UxZDJuVHhranU3clBzSlVLQUl3cG1VS0lPMHlsb0RDQXlOTTFTcDRPcFBUQWwtYWNkTm0xeFA0QUlMTFV2SDhXbjVNVFE0SGVGR2JydTY3VlZNMVFPc2J5Mm5vdmhMTC1fVjdHNXJnMy16Y2NJRmxlb08zaUFyZ3RTYWhzTFh1aENIdURuUDdQUDJkNndMcE1heWFlWEZZNUlhZVR0aF9ySEg4b1poMFlrWmVINlM0NVNlSWxGc2c9PQ==) 
                CM_CERTIFICATE_PASSWORD: Encrypted(Z0FBQUFBQmhKMUFYNHI2M3BGVFVPdmd3aHM5MGxDUnM0UGl4b3BJbFdvTDRPUTdwa0tiUXMzWVRoZExzSGd6cW5PZGxjdFFjcENVVG1namVDQUFDV1dfdUlTd3pjdGIxM1E9PQ==)
                CM_PROVISIONING_PROFILE: Encrypted(Z0FBQUFBQmhLSkVsRU9WN2tWUTdLYXQzQ2VPUENobXpMcWJKQVRadDRsb1NmVFVUTVJZd0xENl9fYnVkNk9lNnNya3BFSVZOekpCOVFVSFhlSUNEWnhLaVZ2MHJ3dVNJOEJzenNaYkZxTUlVV0ZmZ2wtY2FZbWpsU0RZV0hZREtaV1NhYlk3czJEWVl5NWgtWXVuNEdvcTdzRnpwNUFTYTcwa0Y2TFFEajI1M3d4ZjlmeXF2YVRvSFRITkUwYUpVelB4eXVadUY4VlJZTFZ5M0hVa2Z2WnljREF4eE8zQWpWM2N1STFhOXBLN09oRnZ3Wm45NHZWSTdEU3Z5TjFTWXpRYkdsY0F5VjMzdXRmUTU1WFFrUHQ4M3R5OGxmdFd0aElONmRPNTJZY25JUjRRMF9mVGk4d2NmbE9hRkFjMEdCX2tmRnI1RWZ1VWxmcU9QeS1QcUcwaWRQNWt6ZHFEaW5XelZhYXpTblM5VTBpRTZGaWpPQnVhV2xtYXpNT1N2LU10ZGZ2Y2paSDZVeDBxbGo4dVVqUUpZNzBwd0NpUm10ZjZ3am5QMU5vZDRWQlk5M0pFc2t6RkdBV2VIOXRiNk9aY0FBdjNEMWttQ1Q4cHZFQnFZc3FYb1MxdThDV3lYa2JzdlU0U2l2cEN5ekNLa1U1Um54TE9zcGhwZi1ONzNfUjlTSjdKT3lyNy0ySDR4VTdJeWstQl9FNmMxcXFCMktVNmtTUHliSEIzSXR4dGZ4WUVGYXlIdHFhRnJ2UDMxN0l5YnVHQTRxR25sdUxsMC1GNEJSTW5nd2ZuUmE1Sy1SeEtkNlVKbnZ0UE95dm5lLU9ZY2ltQTdQejRETlFPeF83ZUpFYUx1X085X0lIWW1PLU5vblZDNWRXdWJwQms2Y1h1MHZFcFdYZHFlOThieVJTeWc1TjFacGhfWUZxMGx1T2NPNTAwenlQcnFaWWJXUjhGb1RNRW1qNVhoSlZ5cFRzc1d1dnkzNVpSSUNDNllOMmgzRldwc1RHNVNscVN6Mm9ZUTNGM1pJaXljaTJsckdEYlNQNkc5blVOSUJTeERRZ09KbThycUxGRmhxOTc3Sm1qUEVDZVNYNkJFUHJQZlZrVmJQVDl0THdLQUJiYXdYSk5vRUNTMzBkM0hITFNJaGN5NWxwdjNWSmlqTXNwX1NVUmN4RDdfQm9zUFlXUVVXamstTklad0dCWGlJWXlPSjZkUGJyblcwS2lDb1lJYjRzTFA0Tm1Bd19Mc0RNTjB5YnZMYjV5M2hvUUtadkd5ekdMa0k5eUpnQVVMWkRIWFV5eE4xcWFIV05WZnd2YkVlYnowRUNTaXJQLVM5MzFSTFZMYXhxc1VaUm1tb1pGbzlDZFYyQk0xZkhXb1EwQW5FZFN3SkZseEV0cEVYeWhIX1p5RTFEZENPc1NiVVlhSFkwUnlqSy14Vm5XVVZ6dUNoNVVYaGt6ak5XRDcxSlZlallCRFRYR09vUGg4OFgxZXRiU1AxajYwbk5nS0psNDZVRm5HX25CQk95VGMtZnl5YnBKS0dSTnpzMGVvMmd1MmF6QlJyNFRpN2o0dVpuY1RIZz09)
            node: latest
            xcode: 12.5
            cocoapods: default
        triggering:
            events:
                - push
                - tag
                - pull_request
            branch_patterns:
                - pattern: develop
                  include: true
                  source: true
        scripts:
            - name: Install npm dependencies
              script: |
                npm install
            - name: Install CocoaPods dependencies
              script: |
                cd ios && pod install
            - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
              script: |
                keychain initialize
            #- name: Fetch signing files
            #  script: |
            #    # For information about Codemagic CLI commands visit: https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/README.md
            #    # For details about the --type paramater below - https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/fetch-signing-files.md#--typeios_app_adhoc--ios_app_development--ios_app_inhouse--ios_app_store--mac_app_development--mac_app_direct--mac_app_store--mac_catalyst_app_development--mac_catalyst_app_direct--mac_catalyst_app_store--tvos_app_adhoc--tvos_app_development--tvos_app_inhouse--tvos_app_store
            #    app-store-connect fetch-signing-files "$BUNDLE_ID" --type IOS_APP_STORE --create
            - name: set up provisioning profiles
              script: |
                 PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
                 mkdir -p "$PROFILES_HOME"
                 PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
                 echo ${CM_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
                 echo "Saved provisioning profile $PROFILE_PATH"   
                 
            - name: Add signing certificate to keychain
              script: |
                 echo $CM_CERTIFICATE | base64 --decode > /tmp/certificate.p12
                 keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $CM_CERTIFICATE_PASSWORD                   
            #- name: Use system default keychain
            #  script: |
            #    keychain add-certificates
            - name: Increment build number
              script: |
                #!/bin/sh
                set -e
                set -x
                cd $FCI_BUILD_DIR/ios
                # agvtool new-version -all $(($BUILD_NUMBER + 1))
                agvtool new-version -all $(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_APP_ID") + 1))
            - name: Set up code signing settings on Xcode project
              script: |
                xcode-project use-profiles
            - name: Build ipa for distribution
              script: |
                xcode-project build-ipa --workspace "$XCODE_WORKSPACE"  
        artifacts:
            - build/ios/ipa/*.ipa
            - /tmp/xcodebuild_logs/*.log
            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
        #publishing:
          # See the following link for details about email publishing - https://docs.codemagic.io/publishing-yaml/distribution/#email
        #  email:
        #    recipients:
        #      - user_1@example.com
        #      - user_2@example.com
        #    notify:
        #      success: true     # To not receive a notification when a build succeeds
        #      failure: false    # To not receive a notification when a build fails
        #  slack: 
        #    # See the following link about how to connect your Slack account - https://docs.codemagic.io/publishing-yaml/distribution/#slack
        #    channel: '#channel-name'
        #    notify_on_build_start: true   # To receive a notification when a build starts
        #    notify:
        #      success: true               # To not receive a notification when a build succeeds
        #      failure: false              # To not receive a notification when a build fails
        #  app_store_connect:                 
        #      apple_id: $APPLE_ID
        #      password: $APP_SPECIFIC_PASSWORD
    
